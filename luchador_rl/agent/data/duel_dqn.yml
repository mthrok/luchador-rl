common_layers: &common_layers
  - typename: TrueDiv
    args:
      denom: 255
      scope: common/layer0/preprocessing
  - typename: Conv2D
    args:
      n_filters: 32
      filter_width: 8
      filter_height: 8
      strides: 4
      padding: valid
      scope: common/layer1/conv2D
  - typename: ReLU
    args:
      scope: common/layer1/ReLU
  - typename: Conv2D
    args:
      n_filters: 64
      filter_width: 4
      filter_height: 4
      strides: 2
      padding: valid
      scope: common/layer2/conv2D
  - typename: ReLU
    args:
      scope: common/layer2/ReLU
  - typename: Conv2D
    args:
      filter_width: 3
      filter_height: 3
      n_filters: 64
      strides: 1
      padding: valid
      scope: common/layer3/conv2D
  - typename: ReLU
    args:
      scope: common/layer3/ReLU
  - typename: Flatten
    args:
      scope: common/layer4/flatten

state_value_layers: &state_value_layers
  - typename: Dense
    args:
      n_nodes: 512
      scope: value/layer5/dense
  - typename: ReLU
    args:
      scope: value/layer5/ReLU
  - typename: Dense
    args:
      n_nodes: 1
      scope: value/layer6/dense
  - typename: Anonymous
    args:
      exp: 'tile(x, pattern=(1, {n_actions}))'
      scope: value/layer7/tile

advantage_value_layers: &advantage_value_layers
  - typename: Dense
    args:
      n_nodes: 512
      scope: advantage/layer5/dense
  - typename: ReLU
    args:
      scope: advantage/layer5/ReLU
  - typename: Dense
    args:
      n_nodes: {n_actions}
      scope: advantage/layer6/dense
  - typename: Anonymous
    args:
      exp: 'x - tile(reduce_mean(x, axis=1, keep_dims=True), pattern=(1, {n_actions}))'
      scope: advantage/layer7/mean_shift

################################################################################
common: &common
  typename: Sequential
  args:
    name: common
    input_config:
      typename: Input
      reuse: True
      name: state
    layer_configs:
      *common_layers

state_value: &state_value
  typename: Sequential
  args:
    name: state_value
    input_config:
      typename: Model
      name: common
      fetch: output
    layer_configs:
      *state_value_layers

advantage: &advantage
  typename: Sequential
  args:
    name: advantage
    input_config:
      typename: Model
      name: common
      fetch: output
    layer_configs:
      *advantage_value_layers

q_value: &q_value
  typename: Sequential
  args:
    name: q_value
    input_config:
      - typename: Model
        name: state_value
        fetch: output
      - typename: Model
        name: advantage
        fetch: output
    layer_configs:
      - typename: Anonymous
        args:
          exp: x[0] + x[1]
          scope: q_value/layer9

model: &model
  typename: Container
  args:
    input_config:
      typename: Input
      args:
        dtype: uint8
        shape: {input_shape}
        name: state
    output_config:
      typename: Model
      name: q_value
      fetch: output
    model_configs:
      - <<: *common
        name: common
      - <<: *state_value
        name: state_value
      - <<: *advantage
        name: advantage
      - <<: *q_value
        name: q_value

################################################################################
typename: Container
args:
  model_configs:
    - <<: *model
      name: pre_trans
      scope: pre_trans
    - <<: *model
      name: post_trans
      scope: post_trans
